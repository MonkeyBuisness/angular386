@import 'palette';

// Gets a color from a theme palette
//
// @param $color-map The theme palette
// @param $opacity The alpha channel value for the color.
@function get-386-color($palette, $opacity: null) {
    $color: map-get($palette);
    $opacity: if($opacity == null, opacity($color), $opacity);

    @return rgba($color, $opacity);
}

@function theme386-light($primary, $secondary, $info: $ega16-black, $succes: $ega16-green, $warning: $ega16-brown, $danger: $ega16-red) {
    @return (
        primary: $primary,
        secondary: $secondary,
        info: $info,
        succes: $succes,
        warning: $warning,
        danger: $danger,
        is-dark: false,
        foreground: $386-light-theme-foreground,
        background: $386-light-theme-background
    );
}

// Creates a container object for a dark theme to be given to individual component theme mixins.
@function theme386-dark($primary, $secondary, $info: $ega16-black, $succes: $ega16-green, $warning: $ega16-brown, $danger: $ega16-red) {
    @return (
        primary: $primary,
        secondary: $secondary,
        info: $info,
        succes: $succes,
        warning: $warning,
        danger: $danger,
        is-dark: true,
        foreground: $386-dark-theme-foreground,
        background: $386-dark-theme-background
    );
}