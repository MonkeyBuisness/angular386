@import '../core/style/variables';
@import '../core/style/button-common';

%button386-base {
    display: inline-block;
    font-weight: $btn386-font-weight;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    touch-action: manipulation;
    background-image: none;
    outline: 0;
    @include button386-size($btn386-padding-y, $btn386-padding-x, $font-size-base, $line-height, $btn386-border-radius);
    @include border-radius(0);
    
    &.mini {
        padding: 0;
        font-size: $btn386-mini-font-size;
    }

    &.small {
        padding: 0;
        font-size: $btn386-small-font-size;
    }

    &.large {
        padding: 10px 10px;
        font-size: $btn386-large-font-size;
    }

    &:before {
        content: "< ";
    }

    &:after {
        content: " >";
    }
}

/*.btn {
    

    .box-shadow(~"@{baseLineWidth} @{halfbaseLineHeight} 0 rgb(0,0,0)");
  
  cursor: default;
  border: 0px;
  .user-select(none);

  &::first-letter {
    color: @redDark;
  }

  &,
  &:active,
  &.active {
    &:focus,
    &.focus {
      outline: 0;
    }
  }

  &:hover,
  &:focus,
  &.focus {
    outline: 0;
  }

  &:active,
  &.active {
    color: @gray !important;
    background: @black !important;
    outline: 0;
    &::first-letter {
      color: @gray !important;
    }
  }


  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: @cursor-disabled;
    pointer-events: none; // Future-proof disabling of clicks
    .box-shadow(none);
  }
}
.navbar .btn {
  background: @grayDark;
  color: @white;
  .box-shadow(none);
  &::first-letter {
    color: @yellow;
  }
}


// Alternate buttons
// --------------------------------------------------

.btn-default {
  .button-variant(@btn-default-color; @btn-default-bg; @btn-default-border);
}
.btn-primary {
  .button-variant(@btn-primary-color; @btn-primary-bg; @btn-primary-border);
}
// Success appears as green
.btn-success {
  &::first-letter {
    color: @yellow;
  }
  .button-variant(@btn-success-color; @btn-success-bg; @btn-success-border);
}
// Info appears as blue-green
.btn-info {
  &::first-letter {
    color: @yellow;
  }
  .button-variant(@btn-info-color; @btn-info-bg; @btn-info-border);
}
// Warning appears as orange
.btn-warning {
  &::first-letter {
    color: @yellow;
  }
  .button-variant(@btn-warning-color; @btn-warning-bg; @btn-warning-border);
}
// Danger and error appear as red
.btn-danger {
  &::first-letter {
    color: @yellow;
  }
  .button-variant(@btn-danger-color; @btn-danger-bg; @btn-danger-border);
}


// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link {
  color: @link-color;
  font-weight: normal;

  &,
  &:active,
  &.active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    .box-shadow(none);
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    color: @link-hover-color;
    background-color: transparent;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: @btn-link-disabled-color;
    }
  }
}


// Button Sizes
// --------------------------------------------------

.btn-lg {
  // line-height: ensure even-numbered height of button next to large input
  //.button-size(@padding-large-vertical; @padding-large-horizontal; @font-size-large; @line-height-large; @border-radius-large);
  padding: @baseLineHeight @baseLineWidth;
}
.btn-sm,.btn-xs {
  .box-shadow(none);
}


// Block button
// --------------------------------------------------

.btn-block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top:  @baseLineHeight;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

























@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);

  &:focus,
  &.focus,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }
  @include hover {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    // Remove the gradient for the pressed/active state
    background-image: none;
    @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
  }
  &.disabled,
  &:disabled,
  fieldset[disabled] & {
    &:focus,
    &.focus {
      background-color: $background;
          border-color: $border;
    }
    @include hover {
      background-color: $background;
          border-color: $border;
    }
  }
}

@mixin button-outline-variant($color) {
  color: $color;
  background-image: none;
  background-color: transparent;
  border-color: $color;

  &:focus,
  &.focus,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: #fff;
    background-color: $color;
        border-color: $color;
  }
  @include hover {
    color: #fff;
    background-color: $color;
        border-color: $color;
  }

  &.disabled,
  &:disabled,
  fieldset[disabled] & {
    &:focus,
    &.focus {
      border-color: lighten($color, 20%);
    }
    @include hover {
      border-color: lighten($color, 20%);
    }
  }
}

//////////////

@mixin hover {
  @if $enable-hover-media-query {
    // See Media Queries Level 4: http://drafts.csswg.org/mediaqueries/#hover
    // Currently shimmed by https://github.com/twbs/mq4-hover-shim
    @media (hover: hover) {
      &:hover { @content }
    }
  }
  @else {
    &:hover { @content }
  }
}

@mixin hover-focus {
  @if $enable-hover-media-query {
    &:focus { @content }
    @include hover { @content }
  }
  @else {
    &:focus,
    &:hover {
      @content
    }
  }
}

@mixin plain-hover-focus {
  @if $enable-hover-media-query {
    &,
    &:focus {
      @content
    }
    @include hover { @content }
  }
  @else {
    &,
    &:focus,
    &:hover {
      @content
    }
  }
}

@mixin hover-focus-active {
  @if $enable-hover-media-query {
    &:focus,
    &:active {
      @content
    }
    @include hover { @content }
  }
  @else {
    &:focus,
    &:active,
    &:hover {
      @content
    }
  }
}*/